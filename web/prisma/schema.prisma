generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/db"
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  uid   String @unique
  email String @unique

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Article       Article[]
  SynthesisTask SynthesisTask[]

  @@map("users")
}

model Article {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  User    User   @relation(fields: [user_id], references: [id])
  user_id String @db.Uuid

  url      String  @db.Text
  title    String  @db.Text
  og_image String? @db.Text
  content  String  @db.Text

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  SynthesisTask SynthesisTask?

  @@map("articles")
}

enum TaskStatus {
  COMPLETED
  FAILED
  IN_PROGRESS
  SCHEDULED
}

model SynthesisTask {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  User    User   @relation(fields: [user_id], references: [id])
  user_id String @db.Uuid

  Article    Article @relation(fields: [article_id], references: [id])
  article_id String  @unique @db.Uuid

  polly_task_id      String  @unique
  engine             String?
  voice_id           String?
  status             String?
  status_reason      String?
  request_characters Int?
  output_url         String?

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("synthesis_tasks")
}
